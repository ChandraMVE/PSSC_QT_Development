<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>sService</class>
 <widget class="QWidget" name="sService">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>768</width>
    <height>944</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <widget class="QPushButton" name="pbExit">
   <property name="geometry">
    <rect>
     <x>560</x>
     <y>820</y>
     <width>167</width>
     <height>80</height>
    </rect>
   </property>
   <property name="focusPolicy">
    <enum>Qt::ClickFocus</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton{
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(194, 194, 194);
border-width: 2px;
border-color: rgb(194, 194, 194);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
   </property>
   <property name="text">
    <string>Exit</string>
   </property>
  </widget>
  <widget class="QPushButton" name="pbSave">
   <property name="geometry">
    <rect>
     <x>365</x>
     <y>820</y>
     <width>167</width>
     <height>80</height>
    </rect>
   </property>
   <property name="focusPolicy">
    <enum>Qt::ClickFocus</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton{
background-color: rgb(51, 204, 0);
border-width: 2px;
border-color: rgb(51, 204, 0);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
   </property>
   <property name="text">
    <string>Save</string>
   </property>
  </widget>
  <widget class="QTabWidget" name="twService">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>10</y>
     <width>749</width>
     <height>790</height>
    </rect>
   </property>
   <property name="focusPolicy">
    <enum>Qt::NoFocus</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">QTabWidget::pane { /* The tab widget frame */
    position: absolute;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;

   border: 0px solid #C4C4C3;
   border-bottom-color: #C2C7CB; /* same as the pane color */
   border-bottom-left-radius: 30px;
   border-bottom-right-radius: 30px;
   border-top-right-radius: 30px;

}

QTabWidget::tab-bar {
    alignment: left;

}

/* Style the tab using the tab sub-control. Note that
    it reads QTabBar _not_ QTabWidget */
QTabBar::tab {

    border: 1px solid #C4C4C3;
    border-bottom-color: #C2C7CB; /* same as the pane color */
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;

    padding: 2px;
    height:41px;
   width: 176px; /*180*/

border-width: 1px;
border-color: rgb(21, 100, 192);
border-style: solid;

font: 75 16pt &quot;Roboto Medium&quot;;
	color: rgb(0, 0, 0);
	

}

QTabBar::tab:selected, QTabBar::tab:hover {
	background-color: rgb(190, 190, 190);
}

QTabBar::tab:selected {
    border-color: #9B9B9B;
    border-bottom-color: #C2C7CB; /* same as pane color */
 border: 0px
}
</string>
   </property>
   <property name="currentIndex">
    <number>0</number>
   </property>
   <widget class="QWidget" name="tab">
    <attribute name="title">
     <string>Service</string>
    </attribute>
    <widget class="QFrame" name="frame">
     <property name="geometry">
      <rect>
       <x>0</x>
       <y>0</y>
       <width>749</width>
       <height>732</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">background-color: rgb(241, 241, 241);
	 border: 2px solid #C4C4C3;
    border-bottom-color: #C2C7CB; /* same as the pane color */
    border-bottom-left-radius: 30px;
border-bottom-right-radius: 30px;
    border-top-right-radius: 30px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
border-color:  rgb(190, 190, 190);



</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::StyledPanel</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <widget class="QGroupBox" name="groupBox">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>118</y>
        <width>709</width>
        <height>120</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
      </property>
      <property name="title">
       <string>Temperature Control</string>
      </property>
      <widget class="QLabel" name="label_16">
       <property name="geometry">
        <rect>
         <x>40</x>
         <y>40</y>
         <width>96</width>
         <height>50</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>Enable</string>
       </property>
      </widget>
      <widget class="sQLEExtend" name="leTemperature">
       <property name="geometry">
        <rect>
         <x>290</x>
         <y>40</y>
         <width>170</width>
         <height>50</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
       </property>
       <property name="text">
        <string>100.00</string>
       </property>
       <property name="maxLength">
        <number>15</number>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbTEnable">
       <property name="geometry">
        <rect>
         <x>150</x>
         <y>40</y>
         <width>41</width>
         <height>50</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 5px;
 border: 0px solid #999999;

}

QCheckBox::indicator {
    width: 41px;
    height: 41px;
}

QCheckBox::indicator:unchecked {
	image: url(:/images/icons/ancheck.png);
}
/*
QCheckBox::indicator:unchecked:hover {
    image: url(:/images/checkbox_unchecked_hover.png);
}

QCheckBox::indicator:unchecked:pressed {
    image: url(:/images/checkbox_unchecked_pressed.png);
}
*/
QCheckBox::indicator:checked {
    image: url(:/images/icons/acheck.png);
}
/*
QCheckBox::indicator:checked:hover {
    image: url(:/images/checkbox_checked_hover.png);
}

QCheckBox::indicator:checked:pressed {
    image: url(:/images/checkbox_checked_pressed.png);
}
*/
QCheckBox::indicator:indeterminate:hover {
    image: url(:/images/checkbox_indeterminate_hover.png);
}
/*
QCheckBox::indicator:indeterminate:pressed {
    image: url(:/images/checkbox_indeterminate_pressed.png);
}
*/</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QPushButton" name="pbTSet">
       <property name="geometry">
        <rect>
         <x>500</x>
         <y>40</y>
         <width>167</width>
         <height>50</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton{
background-color: rgb(51, 204, 0);
border-width: 2px;
border-color: rgb(51, 204, 0);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
       </property>
       <property name="text">
        <string>Set</string>
       </property>
      </widget>
      <widget class="QLabel" name="label_6">
       <property name="geometry">
        <rect>
         <x>250</x>
         <y>40</y>
         <width>36</width>
         <height>50</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>T =</string>
       </property>
      </widget>
     </widget>
     <widget class="QGroupBox" name="groupBox_4">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>376</y>
        <width>709</width>
        <height>170</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
      </property>
      <property name="title">
       <string>Shaker Motor</string>
      </property>
      <widget class="sQLEExtend" name="leRPM">
       <property name="geometry">
        <rect>
         <x>160</x>
         <y>100</y>
         <width>81</width>
         <height>50</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
       </property>
       <property name="text">
        <string>90</string>
       </property>
       <property name="maxLength">
        <number>15</number>
       </property>
      </widget>
      <widget class="QPushButton" name="pbRPMSet">
       <property name="geometry">
        <rect>
         <x>290</x>
         <y>100</y>
         <width>167</width>
         <height>50</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton{
background-color: rgb(51, 204, 0);
border-width: 2px;
border-color: rgb(51, 204, 0);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
       </property>
       <property name="text">
        <string>Set</string>
       </property>
      </widget>
      <widget class="QLabel" name="label_7">
       <property name="geometry">
        <rect>
         <x>40</x>
         <y>100</y>
         <width>71</width>
         <height>50</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>RPM =</string>
       </property>
      </widget>
      <widget class="QLabel" name="lblRPM">
       <property name="geometry">
        <rect>
         <x>510</x>
         <y>100</y>
         <width>121</width>
         <height>50</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">
   padding: 2px 5px 1px 10px;
   background-color: rgb(245,245,245);
   border-width: 2px;
   border-color: rgb(21, 100, 192);
   border-style: solid;
   border-radius: 15px;
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;

</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="label_17">
       <property name="geometry">
        <rect>
         <x>40</x>
         <y>35</y>
         <width>96</width>
         <height>50</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>Enable</string>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbSMEnable">
       <property name="geometry">
        <rect>
         <x>160</x>
         <y>35</y>
         <width>41</width>
         <height>50</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 5px;
 border: 0px solid #999999;

}

QCheckBox::indicator {
    width: 41px;
    height: 41px;
}

QCheckBox::indicator:unchecked {
	image: url(:/images/icons/ancheck.png);
}
/*
QCheckBox::indicator:unchecked:hover {
    image: url(:/images/checkbox_unchecked_hover.png);
}

QCheckBox::indicator:unchecked:pressed {
    image: url(:/images/checkbox_unchecked_pressed.png);
}
*/
QCheckBox::indicator:checked {
    image: url(:/images/icons/acheck.png);
}
/*
QCheckBox::indicator:checked:hover {
    image: url(:/images/checkbox_checked_hover.png);
}

QCheckBox::indicator:checked:pressed {
    image: url(:/images/checkbox_checked_pressed.png);
}
*/
QCheckBox::indicator:indeterminate:hover {
    image: url(:/images/checkbox_indeterminate_hover.png);
}
/*
QCheckBox::indicator:indeterminate:pressed {
    image: url(:/images/checkbox_indeterminate_pressed.png);
}
*/</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
     </widget>
     <widget class="QGroupBox" name="groupBox_10">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>561</y>
        <width>709</width>
        <height>120</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
      </property>
      <property name="title">
       <string>Selector Valve</string>
      </property>
      <widget class="QComboBox" name="cbSelectorValve">
       <property name="geometry">
        <rect>
         <x>25</x>
         <y>50</y>
         <width>212</width>
         <height>50</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto Medium</family>
         <pointsize>16</pointsize>
         <weight>9</weight>
         <italic>false</italic>
         <bold>false</bold>
        </font>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QComboBox {
   border: 2px solid  rgb(21, 100, 192);
   border-radius: 10px;
   padding: 1px 18px 1px 3px;
   background-color: rgb(255, 255, 255);
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;
   padding-left: 15px;
}

QComboBox:on {
    padding-top: 3px;
    padding-left: 15px;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 45px;
    border-left-width: 2px;
    border-left-color: darkgray;
    border-left-style: solid;
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
    border-color: rgb(21, 100, 192);
}

QComboBox::down-arrow {
	image: url(:/images/icons/downarrow.png);
}

QComboBox::down-arrow:on {
    top: 1px;
    left: 1px;
}

QComboBox QAbstractItemView {
   border: 2px solid rgb(21, 100, 192);
   font: 75 16pt &quot;Roboto Medium&quot;;
   border-radius: 5px;
   background-color: rgb(255, 255, 255);
   selection-background-color:  rgb(21, 100, 192);
   selection-color: rgb(255, 255, 255);
}

/*  vertical */
QScrollBar:vertical {
     border: 0px solid  rgb(21, 100, 192);
     background:  rgb(230,230,230);
     width: 42px;
	 margin: 45px 0 45px 0;
     border-left: 2px solid  rgb(182, 182, 182);
     border-radius: 0px;
 }

 QScrollBar::handle:vertical {
     background:  rgb(182, 182, 182);
     min-height: 20px;
 }

 QScrollBar::add-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 45px;
     subcontrol-position: bottom;
     subcontrol-origin: margin;
 }

 QScrollBar::sub-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 45px;
     subcontrol-position: top;
     subcontrol-origin: margin;
 }

 QScrollBar::up-arrow:vertical {
     width: 42px;
     height: 45px;
     background-image: url(:/images/icons/cuparrow.png);
}

QScrollBar::down-arrow:vertical {
     width: 42px;
      height: 45px;
      background-image: url(:/images/icons/cdownarrow.png);
 }

 QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
      background: none;
 }
</string>
       </property>
       <property name="frame">
        <bool>true</bool>
       </property>
       <item>
        <property name="text">
         <string>Closed</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>In</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Out</string>
        </property>
       </item>
      </widget>
      <widget class="QLabel" name="lblSelectorValve">
       <property name="geometry">
        <rect>
         <x>500</x>
         <y>50</y>
         <width>170</width>
         <height>50</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">   padding: 2px 5px 1px 5px;
   background-color: rgb(245,245,245);
   border-width: 2px;
   border-color: rgb(21, 100, 192);
   border-style: solid;
   border-radius: 15px;
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;

</string>
       </property>
       <property name="text">
        <string>In</string>
       </property>
      </widget>
      <widget class="QPushButton" name="pbSVSet">
       <property name="geometry">
        <rect>
         <x>280</x>
         <y>50</y>
         <width>167</width>
         <height>50</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton{
background-color: rgb(51, 204, 0);
border-width: 2px;
border-color: rgb(51, 204, 0);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
       </property>
       <property name="text">
        <string>Set</string>
       </property>
      </widget>
     </widget>
     <widget class="QGroupBox" name="groupBox_7">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>5</y>
        <width>709</width>
        <height>100</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
      </property>
      <property name="title">
       <string/>
      </property>
      <widget class="QLabel" name="label_9">
       <property name="geometry">
        <rect>
         <x>20</x>
         <y>30</y>
         <width>141</width>
         <height>50</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>Temperature</string>
       </property>
      </widget>
      <widget class="QLabel" name="lblTemperature">
       <property name="geometry">
        <rect>
         <x>170</x>
         <y>30</y>
         <width>150</width>
         <height>50</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">   padding: 2px 5px 1px 5px;
   background-color: rgb(245,245,245);
   border-width: 2px;
   border-color: rgb(21, 100, 192);
   border-style: solid;
   border-radius: 15px;
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;

</string>
       </property>
       <property name="text">
        <string>100.00</string>
       </property>
      </widget>
      <widget class="QLabel" name="label_22">
       <property name="geometry">
        <rect>
         <x>395</x>
         <y>30</y>
         <width>111</width>
         <height>50</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>Pressure</string>
       </property>
      </widget>
      <widget class="QLabel" name="lblPressure">
       <property name="geometry">
        <rect>
         <x>510</x>
         <y>30</y>
         <width>150</width>
         <height>50</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">   padding: 2px 5px 1px 5px;
   background-color: rgb(245,245,245);
   border-width: 2px;
   border-color: rgb(21, 100, 192);
   border-style: solid;
   border-radius: 15px;
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;

</string>
       </property>
       <property name="text">
        <string>101.3</string>
       </property>
      </widget>
     </widget>
     <widget class="QGroupBox" name="groupBox_5">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>246</y>
        <width>709</width>
        <height>120</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
      </property>
      <property name="title">
       <string>Piston Motor</string>
      </property>
      <widget class="sQLEExtend" name="lePistonPosition">
       <property name="geometry">
        <rect>
         <x>160</x>
         <y>40</y>
         <width>101</width>
         <height>50</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
       </property>
       <property name="text">
        <string>1.00</string>
       </property>
       <property name="maxLength">
        <number>15</number>
       </property>
      </widget>
      <widget class="QLabel" name="label_29">
       <property name="geometry">
        <rect>
         <x>40</x>
         <y>40</y>
         <width>111</width>
         <height>41</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>Position</string>
       </property>
      </widget>
      <widget class="QLabel" name="lblPistonPosition">
       <property name="geometry">
        <rect>
         <x>510</x>
         <y>40</y>
         <width>121</width>
         <height>50</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">   padding: 2px 5px 1px 5px;
   background-color: rgb(245,245,245);
   border-width: 2px;
   border-color: rgb(21, 100, 192);
   border-style: solid;
   border-radius: 15px;
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;

</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QPushButton" name="pbPPSet">
       <property name="geometry">
        <rect>
         <x>290</x>
         <y>40</y>
         <width>167</width>
         <height>50</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton{
background-color: rgb(51, 204, 0);
border-width: 2px;
border-color: rgb(51, 204, 0);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
       </property>
       <property name="text">
        <string>Set</string>
       </property>
      </widget>
     </widget>
    </widget>
   </widget>
   <widget class="QWidget" name="tab_2">
    <attribute name="title">
     <string>Data Control</string>
    </attribute>
    <widget class="QFrame" name="frame_2">
     <property name="geometry">
      <rect>
       <x>0</x>
       <y>0</y>
       <width>749</width>
       <height>730</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">background-color: rgb(241, 241, 241);
	 border: 2px solid #C4C4C3;
    border-bottom-color: #C2C7CB; /* same as the pane color */
    border-bottom-left-radius: 30px;
border-bottom-right-radius: 30px;
    border-top-right-radius: 30px;
color: rgb(0, 0, 0); 
font: 75 16pt &quot;Roboto Medium&quot;;
border-color:  rgb(190, 190, 190);



</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::StyledPanel</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <widget class="QGroupBox" name="groupBox_9">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>425</y>
        <width>709</width>
        <height>200</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
      </property>
      <property name="title">
       <string>Firmware update</string>
      </property>
      <widget class="QLabel" name="label_25">
       <property name="geometry">
        <rect>
         <x>40</x>
         <y>35</y>
         <width>51</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>File</string>
       </property>
      </widget>
      <widget class="QLabel" name="lblFileSelected">
       <property name="geometry">
        <rect>
         <x>50</x>
         <y>120</y>
         <width>311</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>---</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
       </property>
       <property name="wordWrap">
        <bool>true</bool>
       </property>
      </widget>
      <widget class="QPushButton" name="pbFileSelect">
       <property name="geometry">
        <rect>
         <x>380</x>
         <y>35</y>
         <width>167</width>
         <height>51</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton{
background-color: rgb(51, 204, 0);
border-width: 2px;
border-color: rgb(51, 204, 0);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
       </property>
       <property name="text">
        <string>Select</string>
       </property>
      </widget>
      <widget class="QPushButton" name="pbFWUpdate">
       <property name="geometry">
        <rect>
         <x>380</x>
         <y>120</y>
         <width>167</width>
         <height>51</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton{
background-color: rgb(51, 204, 0);
border-width: 2px;
border-color: rgb(51, 204, 0);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
       </property>
       <property name="text">
        <string>Update</string>
       </property>
      </widget>
     </widget>
     <widget class="QGroupBox" name="groupBox_11">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>5</y>
        <width>709</width>
        <height>121</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
      </property>
      <property name="title">
       <string/>
      </property>
      <widget class="QLabel" name="label_10">
       <property name="geometry">
        <rect>
         <x>20</x>
         <y>40</y>
         <width>141</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>Temperature</string>
       </property>
      </widget>
      <widget class="QLabel" name="lblTemperature_2">
       <property name="geometry">
        <rect>
         <x>170</x>
         <y>40</y>
         <width>170</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">   padding: 2px 5px 1px 5px;
   background-color: rgb(245,245,245);
   border-width: 2px;
   border-color: rgb(21, 100, 192);
   border-style: solid;
   border-radius: 15px;
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;

</string>
       </property>
       <property name="text">
        <string>100.00</string>
       </property>
      </widget>
      <widget class="QLabel" name="label_28">
       <property name="geometry">
        <rect>
         <x>375</x>
         <y>40</y>
         <width>111</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>Pressure</string>
       </property>
      </widget>
      <widget class="QLabel" name="lblPressure_2">
       <property name="geometry">
        <rect>
         <x>490</x>
         <y>40</y>
         <width>170</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">   padding: 2px 5px 1px 5px;
   background-color: rgb(245,245,245);
   border-width: 2px;
   border-color: rgb(21, 100, 192);
   border-style: solid;
   border-radius: 15px;
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;

</string>
       </property>
       <property name="text">
        <string>101.3</string>
       </property>
      </widget>
     </widget>
     <widget class="QGroupBox" name="groupBox_2">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>141</y>
        <width>709</width>
        <height>171</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
      </property>
      <property name="title">
       <string>Run</string>
      </property>
      <widget class="QLabel" name="label_24">
       <property name="geometry">
        <rect>
         <x>35</x>
         <y>35</y>
         <width>176</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>Total Count</string>
       </property>
      </widget>
      <widget class="QPushButton" name="pbRunReset">
       <property name="geometry">
        <rect>
         <x>490</x>
         <y>100</y>
         <width>167</width>
         <height>51</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton{
background-color: rgb(51, 204, 0);
border-width: 2px;
border-color: rgb(51, 204, 0);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
       </property>
       <property name="text">
        <string>Reset</string>
       </property>
      </widget>
      <widget class="QLabel" name="label_18">
       <property name="geometry">
        <rect>
         <x>35</x>
         <y>100</y>
         <width>176</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>Since Last Reset</string>
       </property>
       <property name="wordWrap">
        <bool>true</bool>
       </property>
      </widget>
      <widget class="QLabel" name="lblTotalCount">
       <property name="geometry">
        <rect>
         <x>220</x>
         <y>35</y>
         <width>210</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">   padding: 2px 5px 1px 5px;
   background-color: rgb(245,245,245);
   border-width: 2px;
   border-color: rgb(21, 100, 192);
   border-style: solid;
   border-radius: 15px;
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;

</string>
       </property>
       <property name="text">
        <string>4294967295</string>
       </property>
      </widget>
      <widget class="QLabel" name="lblSinceLastReset">
       <property name="geometry">
        <rect>
         <x>220</x>
         <y>100</y>
         <width>210</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">
   padding: 2px 5px 1px 10px;
   background-color: rgb(245,245,245);
   border-width: 2px;
   border-color: rgb(21, 100, 192);
   border-style: solid;
   border-radius: 15px;
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;

</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
     </widget>
     <widget class="QGroupBox" name="groupBox_12">
      <property name="geometry">
       <rect>
        <x>373</x>
        <y>319</y>
        <width>354</width>
        <height>101</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
      </property>
      <property name="title">
       <string>USB Data Log</string>
      </property>
      <widget class="QLabel" name="label_30">
       <property name="geometry">
        <rect>
         <x>40</x>
         <y>40</y>
         <width>101</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>Enable</string>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbUDLEnable">
       <property name="geometry">
        <rect>
         <x>190</x>
         <y>40</y>
         <width>41</width>
         <height>51</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 5px;
 border: 0px solid #999999;

}

QCheckBox::indicator {
    width: 41px;
    height: 41px;
}

QCheckBox::indicator:unchecked {
	image: url(:/images/icons/ancheck.png);
}
/*
QCheckBox::indicator:unchecked:hover {
    image: url(:/images/checkbox_unchecked_hover.png);
}

QCheckBox::indicator:unchecked:pressed {
    image: url(:/images/checkbox_unchecked_pressed.png);
}
*/
QCheckBox::indicator:checked {
    image: url(:/images/icons/acheck.png);
}
/*
QCheckBox::indicator:checked:hover {
    image: url(:/images/checkbox_checked_hover.png);
}

QCheckBox::indicator:checked:pressed {
    image: url(:/images/checkbox_checked_pressed.png);
}
*/
QCheckBox::indicator:indeterminate:hover {
    image: url(:/images/checkbox_indeterminate_hover.png);
}
/*
QCheckBox::indicator:indeterminate:pressed {
    image: url(:/images/checkbox_indeterminate_pressed.png);
}
*/</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
     </widget>
     <widget class="QGroupBox" name="groupBox_8">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>319</y>
        <width>354</width>
        <height>101</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
      </property>
      <property name="title">
       <string>Continuous run</string>
      </property>
      <widget class="QLabel" name="label_19">
       <property name="geometry">
        <rect>
         <x>40</x>
         <y>40</y>
         <width>101</width>
         <height>51</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;</string>
       </property>
       <property name="text">
        <string>Enable</string>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbCREnable">
       <property name="geometry">
        <rect>
         <x>190</x>
         <y>40</y>
         <width>41</width>
         <height>51</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 5px;
 border: 0px solid #999999;

}

QCheckBox::indicator {
    width: 41px;
    height: 41px;
}

QCheckBox::indicator:unchecked {
	image: url(:/images/icons/ancheck.png);
}
/*
QCheckBox::indicator:unchecked:hover {
    image: url(:/images/checkbox_unchecked_hover.png);
}

QCheckBox::indicator:unchecked:pressed {
    image: url(:/images/checkbox_unchecked_pressed.png);
}
*/
QCheckBox::indicator:checked {
    image: url(:/images/icons/acheck.png);
}
/*
QCheckBox::indicator:checked:hover {
    image: url(:/images/checkbox_checked_hover.png);
}

QCheckBox::indicator:checked:pressed {
    image: url(:/images/checkbox_checked_pressed.png);
}
*/
QCheckBox::indicator:indeterminate:hover {
    image: url(:/images/checkbox_indeterminate_hover.png);
}
/*
QCheckBox::indicator:indeterminate:pressed {
    image: url(:/images/checkbox_indeterminate_pressed.png);
}
*/</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
     </widget>
     <widget class="QLabel" name="lblFirmware">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>660</y>
        <width>709</width>
        <height>60</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">border-width: 0px;
color: rgb(193, 193, 193);</string>
      </property>
      <property name="text">
       <string>Current Version:</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
    </widget>
   </widget>
   <widget class="QWidget" name="tab_4">
    <attribute name="title">
     <string>Diagnostic</string>
    </attribute>
    <widget class="QFrame" name="frame_4">
     <property name="geometry">
      <rect>
       <x>0</x>
       <y>0</y>
       <width>749</width>
       <height>730</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">background-color: rgb(241, 241, 241);
	 border: 2px solid #C4C4C3;
    border-bottom-color: #C2C7CB; /* same as the pane color */
    border-bottom-left-radius: 30px;
border-bottom-right-radius: 30px;
    border-top-right-radius: 30px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
border-color:  rgb(190, 190, 190);



</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::StyledPanel</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <widget class="QGroupBox" name="groupBox_3">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>10</y>
        <width>709</width>
        <height>121</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
      </property>
      <property name="title">
       <string>Diagnostic Cycle</string>
      </property>
      <widget class="QPushButton" name="pbRun">
       <property name="geometry">
        <rect>
         <x>60</x>
         <y>50</y>
         <width>167</width>
         <height>51</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton{
background-color: rgb(51, 204, 0);
border-width: 2px;
border-color: rgb(51, 204, 0);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
       </property>
       <property name="text">
        <string>Run</string>
       </property>
      </widget>
      <widget class="QPushButton" name="pbStop">
       <property name="geometry">
        <rect>
         <x>480</x>
         <y>50</y>
         <width>167</width>
         <height>51</height>
        </rect>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton{
background-color: red;
border-width: 2px;
border-color: red;
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(255, 174, 171);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(194, 54, 11);
border-width: 2px;
border-color: rgb(194, 54, 11);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}</string>
       </property>
       <property name="text">
        <string>Stop</string>
       </property>
      </widget>
     </widget>
     <widget class="QListWidget" name="lwStatus">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>143</y>
        <width>709</width>
        <height>560</height>
       </rect>
      </property>
      <property name="focusPolicy">
       <enum>Qt::ClickFocus</enum>
      </property>
      <property name="contextMenuPolicy">
       <enum>Qt::NoContextMenu</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QListWidget {
   border: 2px solid rgb(21, 100, 192);
   border-radius: 15px;
   background-color: rgb(255, 255, 255);
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;
   /*border-bottom-right-radius: 15px;*/
  padding-left:10px;

}

QListWidget QAbstractItemView {
   border: 2px solid darkgray;
   font: 75 16pt &quot;Roboto Medium&quot;;
   border-radius: 15px;
   background-color: rgb(255, 255, 255);
}

QListWidget::item::selected {
 /*  background-color:  rgb(21, 100, 192);
   color:  rgb(255, 255, 255); */
   background-color: rgb(255, 255, 255);
   color: rgb(0, 0, 0);
}

QListWidget::item::hover {
/*
   background-color:  rgb(21, 100, 192);
   color:  rgb(255, 255, 255);
*/
   background-color: rgb(255, 255, 255);
   color: rgb(0, 0, 0);
}

/*  vertical */
QScrollBar:vertical {
     border: 0px solid  rgb(21, 100, 192);
     background:  rgb(230,230,230);
     width: 41px;
	 margin: 50px 0 50px 0;
     border-left: 2px solid  rgb(182, 182, 182);
     border-radius: 0px;
 }

 QScrollBar::handle:vertical {
     background:  rgb(182, 182, 182);
     min-height: 20px;
 }

 QScrollBar::add-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 50px;
     subcontrol-position: bottom;
     subcontrol-origin: margin;
 }

 QScrollBar::sub-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 50px;
     subcontrol-position: top;
     subcontrol-origin: margin;
 }

 QScrollBar::up-arrow:vertical {
     width: 41px;
     height: 50px;
     background-image: url(:/images/icons/cuparrow.png);
}

QScrollBar::down-arrow:vertical {
     width: 41px;
      height: 50px;
      background-image: url(:/images/icons/cdownarrow.png);
 }

 QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
      background: none;
 }
</string>
      </property>
      <property name="verticalScrollBarPolicy">
       <enum>Qt::ScrollBarAsNeeded</enum>
      </property>
      <property name="horizontalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="isWrapping" stdset="0">
       <bool>false</bool>
      </property>
      <property name="wordWrap">
       <bool>false</bool>
      </property>
      <item>
       <property name="text">
        <string>Diagnostic Cycle Started</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Piston Test Done</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Valve Test Done</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Temperature Test Done</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Pressure Test Done</string>
       </property>
      </item>
     </widget>
    </widget>
   </widget>
   <widget class="QWidget" name="tab_3">
    <attribute name="title">
     <string>Error Log</string>
    </attribute>
    <widget class="QFrame" name="frame_3">
     <property name="geometry">
      <rect>
       <x>0</x>
       <y>0</y>
       <width>749</width>
       <height>730</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">background-color: rgb(241, 241, 241);
	 border: 2px solid #C4C4C3;
    border-bottom-color: #C2C7CB; /* same as the pane color */
    border-bottom-left-radius: 30px;
border-bottom-right-radius: 30px;
    border-top-right-radius: 30px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
border-color:  rgb(190, 190, 190);



</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::StyledPanel</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <widget class="QTableWidget" name="twErrorLog">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>23</y>
        <width>709</width>
        <height>675</height>
       </rect>
      </property>
      <property name="sizePolicy">
       <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
        <horstretch>0</horstretch>
        <verstretch>0</verstretch>
       </sizepolicy>
      </property>
      <property name="minimumSize">
       <size>
        <width>0</width>
        <height>0</height>
       </size>
      </property>
      <property name="focusPolicy">
       <enum>Qt::NoFocus</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QTableView {
   color: rgb(0, 0, 0);
   Background-color : white;
   alternate-background-color: rgb(245,245,245);
   Selection-color: white; /* The text color of the selected area*/
   Selection-background-color:  rgb(21, 100, 192);
   border: 0px groove gray;
   border-radius: 10px;
   padding: 2px 4px;
   font: 75 16pt &quot;Roboto Medium&quot;;
   padding:5px;
   outline: 0px;
}

QHeaderView {
	background-color: rgb(182, 182, 182);
    color: white;
    border: 0px solid #6c6c6c;
    height: 35px;
    font: 75 16pt &quot;Roboto Medium&quot;;
	border-radius: 10px;
}

QHeaderView::section {
	background-color: rgb(182, 182, 182);
    color: white;
    border-left: 1px solid #6c6c6c;
    border-right: 1px solid #6c6c6c;
    height: 35px;
    font: 75 16pt &quot;Roboto Medium&quot;;
	border-radius: 5px;
}

QScrollBar {
	border: 0px; 
}

QScrollBar:horizontal {
    background:  rgb(230,230,230);
    height:41px;
    margin: 0px 50px 0 50px;
    border-top: 2px solid  rgb(182, 182, 182);
    border-radius: 0px;
}

QScrollBar::handle:horizontal {
    background:  rgb(182, 182, 182);
    min-width: 20px;
}

QScrollBar::add-line:horizontal {
    border: 0px solid grey;
    background: rgb(230,230,230);
	width:50px;
    subcontrol-position: right;
    subcontrol-origin: margin;
}

QScrollBar::sub-line:horizontal {
    border: 0px solid grey;
    background:  rgb(230,230,230);
	width:50px;
    subcontrol-position: left;
    subcontrol-origin: margin;
}

QScrollBar:left-arrow:horizontal  {
    width: 50px;
    height: 41px;
	background-image: url(:/images/icons/cleftarrow.png);
}

QScrollBar::right-arrow:horizontal {
   width: 50px;
   height: 41px;
   background-image: url(:/images/icons/crightarrow.png);
}

 QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
      background:  rgb(241, 241, 241);
 }

/*  vertical */
QScrollBar:vertical {
     border: 0px solid  rgb(21, 100, 192);
     background:  rgb(230,230,230);
     width: 41px;
	 margin: 50px 0 50px 0;
     border-left: 2px solid  rgb(182, 182, 182);
     border-radius: 0px;
 }

 QScrollBar::handle:vertical {
     background:  rgb(182, 182, 182);
     min-height: 20px;
 }

 QScrollBar::add-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 50px;
     subcontrol-position: bottom;
     subcontrol-origin: margin;
 }

 QScrollBar::sub-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 50px;
     subcontrol-position: top;
     subcontrol-origin: margin;
 }

 QScrollBar::up-arrow:vertical {
     width: 41px;
     height: 50px;
     background-image: url(:/images/icons/cuparrow.png);
}

QScrollBar::down-arrow:vertical {
     width: 41px;
      height: 50px;
      background-image: url(:/images/icons/cdownarrow.png);
 }

 QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
       background:  rgb(241, 241, 241);
 }

QTableView::item {
    padding: 2px 4px;
    outline: 0px;
}
</string>
      </property>
      <property name="editTriggers">
       <set>QAbstractItemView::NoEditTriggers</set>
      </property>
      <property name="tabKeyNavigation">
       <bool>false</bool>
      </property>
      <property name="showDropIndicator" stdset="0">
       <bool>false</bool>
      </property>
      <property name="dragDropOverwriteMode">
       <bool>false</bool>
      </property>
      <property name="alternatingRowColors">
       <bool>true</bool>
      </property>
      <property name="selectionMode">
       <enum>QAbstractItemView::NoSelection</enum>
      </property>
      <property name="wordWrap">
       <bool>false</bool>
      </property>
      <property name="cornerButtonEnabled">
       <bool>false</bool>
      </property>
      <attribute name="verticalHeaderVisible">
       <bool>false</bool>
      </attribute>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <row>
       <property name="text">
        <string>New Row</string>
       </property>
      </row>
      <column>
       <property name="text">
        <string>Description</string>
       </property>
       <property name="textAlignment">
        <set>AlignCenter</set>
       </property>
      </column>
      <column>
       <property name="text">
        <string>Date Time</string>
       </property>
      </column>
     </widget>
    </widget>
   </widget>
  </widget>
 </widget>
 <customwidgets>
  <customwidget>
   <class>sQLEExtend</class>
   <extends>QLineEdit</extends>
   <header location="global">sqleextend.h</header>
  </customwidget>
 </customwidgets>
 <tabstops>
  <tabstop>cbTEnable</tabstop>
  <tabstop>leTemperature</tabstop>
  <tabstop>lePistonPosition</tabstop>
  <tabstop>cbSMEnable</tabstop>
  <tabstop>leRPM</tabstop>
  <tabstop>pbExit</tabstop>
  <tabstop>pbSave</tabstop>
  <tabstop>twService</tabstop>
  <tabstop>pbTSet</tabstop>
  <tabstop>pbRPMSet</tabstop>
  <tabstop>cbSelectorValve</tabstop>
  <tabstop>pbSVSet</tabstop>
  <tabstop>pbPPSet</tabstop>
  <tabstop>pbFileSelect</tabstop>
  <tabstop>pbFWUpdate</tabstop>
  <tabstop>pbRunReset</tabstop>
  <tabstop>cbUDLEnable</tabstop>
  <tabstop>cbCREnable</tabstop>
 </tabstops>
 <resources/>
 <connections/>
</ui>
