<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>sMeasuring</class>
 <widget class="QWidget" name="sMeasuring">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>768</width>
    <height>846</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <property name="styleSheet">
   <string notr="true"/>
  </property>
  <widget class="QPushButton" name="pbStop">
   <property name="geometry">
    <rect>
     <x>553</x>
     <y>740</y>
     <width>167</width>
     <height>71</height>
    </rect>
   </property>
   <property name="focusPolicy">
    <enum>Qt::ClickFocus</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton{
background-color: rgb(240,90,40);
border-width: 2px;
border-color: rgb(240,90,40);
border-style: solid;
border-radius: 20;
color: rgb(0,0,0);
font: 100 18pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(190, 190, 190);
border-width: 2px;
border-color: rgb(190, 190, 190);
border-style: solid;
border-radius: 20;
color: rgb(0, 0, 0);
font: 100 18pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(194, 54, 11);
border-width: 2px;
border-color: rgb(194, 54, 11);
border-style: solid;
border-radius: 20;
color: rgb(255, 255, 255);
font: 100 18pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 20;
color: rgb(0, 0, 0);
font: 100 18pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(241, 241, 241);
border-style: solid;
border-radius: 20;
color: rgb(0, 0, 0);
font: 100 18pt &quot;Roboto Medium&quot;;
}</string>
   </property>
   <property name="text">
    <string>STOP</string>
   </property>
  </widget>
  <widget class="QPushButton" name="pbRun">
   <property name="geometry">
    <rect>
     <x>365</x>
     <y>740</y>
     <width>167</width>
     <height>71</height>
    </rect>
   </property>
   <property name="focusPolicy">
    <enum>Qt::ClickFocus</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton{
background-color: rgb(120, 200, 90);
border-width: 2px;
border-color: rgb(120, 200, 90);
border-style: solid;
border-radius: 20;
color: rgb(0,0,0);
font: 100 20pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(190, 190, 190);
border-width: 2px;
border-color: rgb(190, 190, 190);
border-style: solid;
border-radius: 20;
color: rgb(0, 0, 0);
font: 100 20pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 20;
color: rgb(255, 255, 255);
font: 100 20pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 20;
color: rgb(0, 0, 0);
font: 100 20pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(241, 241, 241);
border-style: solid;
border-radius: 20;
color: rgb(0, 0, 0);
font: 100 20pt &quot;Roboto Medium&quot;;
}
</string>
   </property>
   <property name="text">
    <string>RUN</string>
   </property>
  </widget>
  <widget class="sMeasuring2" name="wResult" native="true">
   <property name="geometry">
    <rect>
     <x>300</x>
     <y>762</y>
     <width>40</width>
     <height>50</height>
    </rect>
   </property>
  </widget>
  <widget class="QTabWidget" name="twMeasuring">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>0</y>
     <width>749</width>
     <height>700</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QTabWidget::pane { /* The tab widget frame */
    position: absolute;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
	border: 0px solid #C4C4C3;
	border-bottom-color: #C2C7CB; /* same as the pane color */
   	border-bottom-left-radius: 30px;
   	border-bottom-right-radius: 30px;
    border-top-right-radius: 30px;
}

QTabWidget::tab-bar {
    alignment: left;
}

/* Style the tab using the tab sub-control. Note that
    it reads QTabBar _not_ QTabWidget */
QTabBar::tab {

    border: 1px solid #C4C4C3;
    border-bottom-color: #C2C7CB; /* same as the pane color */
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;

    padding: 0px;
    height:0px;
	border-width: 0px;
	border-color: rgb(21, 100, 192);
	border-style: solid;

	font: 75 16pt &quot;Roboto Medium&quot;;
	color: rgb(0, 0, 0);
	

}

QTabBar::tab:selected, QTabBar::tab:hover {
	background-color: rgb(190, 190, 190);
}

QTabBar::tab:selected {
    border-color: #9B9B9B;
    border-bottom-color: #C2C7CB; /* same as pane color */
 border: 0px
}
</string>
   </property>
   <property name="currentIndex">
    <number>0</number>
   </property>
   <widget class="QWidget" name="tab_4">
    <attribute name="title">
     <string>User Setup</string>
    </attribute>
    <widget class="QFrame" name="frame">
     <property name="geometry">
      <rect>
       <x>0</x>
       <y>6</y>
       <width>730</width>
       <height>691</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/*background-color: rgb(241, 241, 241);*/
background-color: rgb(0, 160, 255);
border-width: 0px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 30;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto&quot;;</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::StyledPanel</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <widget class="QLabel" name="label">
      <property name="geometry">
       <rect>
        <x>60</x>
        <y>30</y>
        <width>141</width>
        <height>41</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">border-width: 0px;
font: 75 20pt &quot;Roboto Medium&quot;;</string>
      </property>
      <property name="text">
       <string>Method</string>
      </property>
     </widget>
     <widget class="QLabel" name="label_2">
      <property name="geometry">
       <rect>
        <x>60</x>
        <y>93</y>
        <width>141</width>
        <height>61</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">border-width: 0px;
font: 75 20pt &quot;Roboto Medium&quot;;</string>
      </property>
      <property name="text">
       <string>Sample Id</string>
      </property>
      <property name="wordWrap">
       <bool>true</bool>
      </property>
     </widget>
     <widget class="QLabel" name="label_3">
      <property name="geometry">
       <rect>
        <x>60</x>
        <y>164</y>
        <width>141</width>
        <height>61</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">border-width: 0px;
font: 75 20pt &quot;Roboto Medium&quot;;</string>
      </property>
      <property name="text">
       <string>Operator</string>
      </property>
      <property name="wordWrap">
       <bool>true</bool>
      </property>
     </widget>
     <widget class="QFrame" name="frame_2">
      <property name="geometry">
       <rect>
        <x>30</x>
        <y>245</y>
        <width>680</width>
        <height>430</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">/*background-color: rgb(0, 0, 0);*/
background-color: rgb(0, 160, 255);
border-width: 1px;
/*border-color: rgb(21, 100, 192);*/
border-color: rgb(0, 160, 255);
border-style: solid;
border-radius: 45;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto&quot;;
outline: none;

</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
     </widget>
     <widget class="QFrame" name="frame_3">
      <property name="geometry">
       <rect>
        <x>25</x>
        <y>255</y>
        <width>680</width>
        <height>430</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgb(255, 255, 255);
border-width: 0px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 45;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto&quot;;
outline: none;

</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QLabel" name="lblMessage">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>100</y>
         <width>680</width>
         <height>71</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto Medium</family>
         <pointsize>24</pointsize>
         <weight>9</weight>
         <italic>false</italic>
         <bold>false</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QFrame, QLabel {
   font: 75 24pt &quot;Roboto Medium&quot;;
   border-width:0px;
   border-radius: 0px;
   border-color: rgb(255, 255, 255);
}
</string>
       </property>
       <property name="lineWidth">
        <number>0</number>
       </property>
       <property name="text">
        <string>Select new parameters OR
Press Run to Start</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
       <property name="wordWrap">
        <bool>true</bool>
       </property>
      </widget>
      <widget class="QFrame" name="frLiveData">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>280</y>
         <width>571</width>
         <height>121</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">QFrame, QLabel {
   border-width:0px;
   border-radius: 0px;
   border-color: rgb(255, 255, 255);
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::NoFrame</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <property name="lineWidth">
        <number>0</number>
       </property>
       <widget class="QLabel" name="lblTemperature">
        <property name="geometry">
         <rect>
          <x>360</x>
          <y>48</y>
          <width>231</width>
          <height>70</height>
         </rect>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(120, 200, 90);
font: 100 30pt &quot;Roboto Medium&quot;;</string>
        </property>
        <property name="text">
         <string>--.--</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
       <widget class="QLabel" name="lblPressure">
        <property name="geometry">
         <rect>
          <x>70</x>
          <y>48</y>
          <width>241</width>
          <height>70</height>
         </rect>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(120, 200, 90);
font: 80 30pt &quot;Roboto Medium&quot;;</string>
        </property>
        <property name="text">
         <string>---.--</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
       <widget class="QLabel" name="label_10">
        <property name="geometry">
         <rect>
          <x>390</x>
          <y>10</y>
          <width>211</width>
          <height>50</height>
         </rect>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(0, 160, 255);
font: 80 20pt &quot;Roboto Medium&quot;;</string>
        </property>
        <property name="text">
         <string>Temperature</string>
        </property>
       </widget>
       <widget class="QLabel" name="label_8">
        <property name="geometry">
         <rect>
          <x>134</x>
          <y>10</y>
          <width>211</width>
          <height>50</height>
         </rect>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(0, 160, 255);;
font: 80 20pt &quot;Roboto Medium&quot;;</string>
        </property>
        <property name="text">
         <string>Pressure</string>
        </property>
       </widget>
      </widget>
      <widget class="QLabel" name="lblAutoCount">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>180</y>
         <width>680</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto Medium</family>
         <pointsize>20</pointsize>
         <weight>9</weight>
         <italic>false</italic>
         <bold>false</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QFrame, QLabel {
border-width: 0px;
font: 75 20pt &quot;Roboto Medium&quot;;
}
</string>
       </property>
       <property name="lineWidth">
        <number>0</number>
       </property>
       <property name="text">
        <string>Auto Repeats: -/-</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
       <property name="wordWrap">
        <bool>true</bool>
       </property>
      </widget>
      <widget class="QLabel" name="lblStatus">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>230</y>
         <width>680</width>
         <height>51</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto Medium</family>
         <pointsize>20</pointsize>
         <weight>9</weight>
         <italic>false</italic>
         <bold>false</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel {
border-width: 0px;
font: 75 20pt &quot;Roboto Medium&quot;;
}</string>
       </property>
       <property name="lineWidth">
        <number>0</number>
       </property>
       <property name="text">
        <string>Rinsing of cell: Cycle 1/10</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
       <property name="wordWrap">
        <bool>true</bool>
       </property>
      </widget>
     </widget>
     <widget class="sQLEExtend" name="leSampleId">
      <property name="geometry">
       <rect>
        <x>199</x>
        <y>98</y>
        <width>421</width>
        <height>50</height>
       </rect>
      </property>
      <property name="focusPolicy">
       <enum>Qt::ClickFocus</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit{
 /*padding: 1px 18px 1px 3px;*/
background-color: rgb(255,255,255);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-top-left-radius: 15px;
border-bottom-left-radius: 15px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
/*padding-left: 15px;*/
   border-right-width: 0px;
}
QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
      </property>
      <property name="text">
       <string>WWWWWWWWWWWWWWWWWWWW</string>
      </property>
      <property name="maxLength">
       <number>20</number>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
     <widget class="QPushButton" name="pbSampleId">
      <property name="geometry">
       <rect>
        <x>619</x>
        <y>98</y>
        <width>53</width>
        <height>50</height>
       </rect>
      </property>
      <property name="focusPolicy">
       <enum>Qt::ClickFocus</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton{
    width: 47px;
    border-top-right-radius: 15px;
    border-bottom-right-radius: 15px;
    border-color: rgb(21, 100, 192);
    image: url(:/images/icons/downarrow.png);
	background-color: rgb(255, 255, 255);
    border-color: rgb(21, 100, 192);
    border-width: 2px;
    border-style: solid;
    border-left-width: 2px;
}
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QPushButton" name="pbOperator">
      <property name="geometry">
       <rect>
        <x>620</x>
        <y>170</y>
        <width>53</width>
        <height>50</height>
       </rect>
      </property>
      <property name="focusPolicy">
       <enum>Qt::ClickFocus</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton{
    width: 47px;
    border-top-right-radius: 15px;
    border-bottom-right-radius: 15px;
    border-color: rgb(21, 100, 192);
    image: url(:/images/icons/downarrow.png);
	background-color: rgb(255, 255, 255);
    border-color: rgb(21, 100, 192);
    border-width: 2px;
    border-style: solid;
    border-left-width: 2px;
}
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="sQLEExtend" name="leOperator">
      <property name="geometry">
       <rect>
        <x>199</x>
        <y>170</y>
        <width>421</width>
        <height>50</height>
       </rect>
      </property>
      <property name="focusPolicy">
       <enum>Qt::ClickFocus</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit{
 /*padding: 1px 18px 1px 3px;*/
background-color: rgb(255,255,255);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-top-left-radius: 15px;
border-bottom-left-radius: 15px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
/*padding-left: 15px;*/
    border-right-width: 0px;
}
QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
      </property>
      <property name="text">
       <string>WWWWWWWWWWWWWWWWWWWW</string>
      </property>
      <property name="maxLength">
       <number>20</number>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
     <widget class="QListWidget" name="lwOperator">
      <property name="geometry">
       <rect>
        <x>200</x>
        <y>218</y>
        <width>471</width>
        <height>16</height>
       </rect>
      </property>
      <property name="focusPolicy">
       <enum>Qt::ClickFocus</enum>
      </property>
      <property name="contextMenuPolicy">
       <enum>Qt::NoContextMenu</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QListWidget {
   border: 2px solid rgb(21, 100, 192);
   border-radius: 8px;
   background-color: rgb(255, 255, 255);
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;
/*   border-bottom-right-radius: 15px;*/
}

QListWidget QAbstractItemView {
   border: 2px solid darkgray;
   font: 75 16pt &quot;Roboto Medium&quot;;
   border-radius: 5px;
   background-color: rgb(255, 255, 255);
}
QListWidget::item {
 height:41px;
}

QListWidget::item::selected {
   background-color:  rgb(21, 100, 192);
   color:  rgb(255, 255, 255);
}

QListWidget::item::hover {
   background-color:  rgb(21, 100, 192);
   color:  rgb(255, 255, 255);
}

/*  vertical */
QScrollBar:vertical {
     border: 0px solid  rgb(21, 100, 192);
     background:  rgb(255,255,255);
     width: 41px;
	 margin: 50px 0 50px 0;
     border-left: 2px solid  rgb(21, 100, 192);
	  border-right: 2px solid  rgb(21, 100, 192);
     border-radius: 0px;
 }

 QScrollBar::handle:vertical {
     background:  rgb(21, 100, 192);
     min-height: 20px;
 }

 QScrollBar::add-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 50px;
     subcontrol-position: bottom;
     subcontrol-origin: margin;
 }

 QScrollBar::sub-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 50px;
     subcontrol-position: top;
     subcontrol-origin: margin;
 }

 QScrollBar::up-arrow:vertical {
     width: 41px;
     height: 50px;
     background-image: url(:/images/icons/cuparrow.png);
}

QScrollBar::down-arrow:vertical {
     width: 41px;
      height: 50px;
      background-image: url(:/images/icons/cdownarrow.png);
 }

 QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
      background: none;
 }
</string>
      </property>
      <property name="verticalScrollBarPolicy">
       <enum>Qt::ScrollBarAsNeeded</enum>
      </property>
      <property name="horizontalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="isWrapping" stdset="0">
       <bool>false</bool>
      </property>
      <property name="wordWrap">
       <bool>false</bool>
      </property>
      <item>
       <property name="text">
        <string>1234567890WWWWWWWWWW</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 2</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 3</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 4</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 5</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 6</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 7</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 8</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 9</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 10</string>
       </property>
      </item>
     </widget>
     <widget class="QListWidget" name="lwSampleId">
      <property name="geometry">
       <rect>
        <x>200</x>
        <y>146</y>
        <width>471</width>
        <height>16</height>
       </rect>
      </property>
      <property name="focusPolicy">
       <enum>Qt::ClickFocus</enum>
      </property>
      <property name="contextMenuPolicy">
       <enum>Qt::NoContextMenu</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QListWidget {
   border: 2px solid rgb(21, 100, 192);
   border-radius: 8px;
   background-color: rgb(255, 255, 255);
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;
/*   border-bottom-right-radius: 15px;*/
}

QListWidget QAbstractItemView {
   border: 2px solid darkgray;
   font: 75 16pt &quot;Roboto Medium&quot;;
   border-radius: 5px;
   background-color: rgb(255, 255, 255);

}
QListWidget::item {
 height:41px;
}

QListWidget::item::selected {
   background-color:  rgb(21, 100, 192);
   color:  rgb(255, 255, 255);
}

QListWidget::item::hover {
   background-color:  rgb(21, 100, 192);
   color:  rgb(255, 255, 255);
}

/*  vertical */
QScrollBar:vertical {
     border: 0px solid  rgb(21, 100, 192);
     background:  rgb(255,255,255);
     width: 41px;
	 margin: 50px 0 50px 0;
     border-left: 2px solid  rgb(21, 100, 192);
	  border-right: 2px solid  rgb(21, 100, 192);
     border-radius: 0px;
 }

 QScrollBar::handle:vertical {
     background:  rgb(21, 100, 192);
     min-height: 20px;
 }

 QScrollBar::add-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 50px;
     subcontrol-position: bottom;
     subcontrol-origin: margin;
 }

 QScrollBar::sub-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 50px;
     subcontrol-position: top;
     subcontrol-origin: margin;
 }

 QScrollBar::up-arrow:vertical {
     width: 41px;
     height: 50px;
     background-image: url(:/images/icons/cuparrow.png);
}

QScrollBar::down-arrow:vertical {
     width: 41px;
      height: 50px;
      background-image: url(:/images/icons/cdownarrow.png);
 }

 QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
      background: none;
 }
</string>
      </property>
      <property name="horizontalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="isWrapping" stdset="0">
       <bool>false</bool>
      </property>
      <property name="wordWrap">
       <bool>false</bool>
      </property>
      <item>
       <property name="text">
        <string>1234567890WWWWWWWWWW</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 2</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 3</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 4</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 5</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 6</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 7</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 8</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 9</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item 10</string>
       </property>
      </item>
     </widget>
     <widget class="QListWidget" name="lwMethods">
      <property name="geometry">
       <rect>
        <x>200</x>
        <y>68</y>
        <width>461</width>
        <height>16</height>
       </rect>
      </property>
      <property name="focusPolicy">
       <enum>Qt::ClickFocus</enum>
      </property>
      <property name="contextMenuPolicy">
       <enum>Qt::NoContextMenu</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QListWidget {
   border: 2px solid rgb(21, 100, 192);
   border-radius: 8px;
   background-color: rgb(255, 255, 255);
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;
/*   border-bottom-right-radius: 15px;*/
}

QListWidget QAbstractItemView {
   border: 2px solid darkgray;
   font: 75 16pt &quot;Roboto Medium&quot;;
   border-radius: 5px;
   background-color: rgb(255, 255, 255);

}
QListWidget::item {
 height:41px;
}

QListWidget::item::selected {
   background-color:  rgb(21, 100, 192);
   color:  rgb(255, 255, 255);
}

QListWidget::item::hover {
   background-color:  rgb(21, 100, 192);
   color:  rgb(255, 255, 255);
}

/*  vertical */
QScrollBar:vertical {
     border: 0px solid  rgb(21, 100, 192);
     background:  rgb(255,255,255);
     width: 41px;
	 margin: 50px 0 50px 0;
     border-left: 2px solid  rgb(21, 100, 192);
	  border-right: 2px solid  rgb(21, 100, 192);
     border-radius: 0px;
 }

 QScrollBar::handle:vertical {
     background:  rgb(21, 100, 192);
     min-height: 20px;
 }

 QScrollBar::add-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 50px;
     subcontrol-position: bottom;
     subcontrol-origin: margin;
 }

 QScrollBar::sub-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 50px;
     subcontrol-position: top;
     subcontrol-origin: margin;
 }

 QScrollBar::up-arrow:vertical {
     width: 41px;
     height: 50px;
     background-image: url(:/images/icons/cuparrow.png);
}

QScrollBar::down-arrow:vertical {
     width: 41px;
      height: 50px;
      background-image: url(:/images/icons/cdownarrow.png);
 }

 QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
      background: none;
 }
</string>
      </property>
      <property name="horizontalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="isWrapping" stdset="0">
       <bool>false</bool>
      </property>
      <property name="wordWrap">
       <bool>false</bool>
      </property>
      <item>
       <property name="text">
        <string>ASTM D5191</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>ASTM D6377</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>ASTM D6378</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>ASTM D5188</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Free 1</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Free 2</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Free 3</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Free 4</string>
       </property>
      </item>
     </widget>
     <widget class="QPushButton" name="pbMethod">
      <property name="geometry">
       <rect>
        <x>620</x>
        <y>20</y>
        <width>53</width>
        <height>50</height>
       </rect>
      </property>
      <property name="focusPolicy">
       <enum>Qt::ClickFocus</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton{
    width: 47px;
    border-top-right-radius: 15px;
    border-bottom-right-radius: 15px;
    border-color: rgb(21, 100, 192);
    image: url(:/images/icons/downarrow.png);
	background-color: rgb(255, 255, 255);
    border-color: rgb(21, 100, 192);
    border-width: 2px;
    border-style: solid;
    border-left-width: 2px;
}
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="sQLEExtend" name="leMethod">
      <property name="geometry">
       <rect>
        <x>200</x>
        <y>20</y>
        <width>420</width>
        <height>50</height>
       </rect>
      </property>
      <property name="focusPolicy">
       <enum>Qt::ClickFocus</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit{
 /*padding: 1px 18px 1px 3px;*/
background-color: rgb(255,255,255);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-top-left-radius: 15px;
border-bottom-left-radius: 15px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
/*padding-left: 15px;*/
   border-right-width: 0px;
}
QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
      </property>
      <property name="text">
       <string>D5191</string>
      </property>
      <property name="maxLength">
       <number>20</number>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
     <zorder>label</zorder>
     <zorder>label_2</zorder>
     <zorder>label_3</zorder>
     <zorder>frame_2</zorder>
     <zorder>frame_3</zorder>
     <zorder>leSampleId</zorder>
     <zorder>pbOperator</zorder>
     <zorder>leOperator</zorder>
     <zorder>lwOperator</zorder>
     <zorder>lwSampleId</zorder>
     <zorder>pbSampleId</zorder>
     <zorder>lwMethods</zorder>
     <zorder>pbMethod</zorder>
     <zorder>leMethod</zorder>
    </widget>
   </widget>
  </widget>
  <widget class="QLabel" name="lblIdleTimer">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>740</y>
     <width>167</width>
     <height>80</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">border-width: 0px;
font: 75 16pt &quot;Roboto Medium&quot;;</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="pbStop_2">
   <property name="geometry">
    <rect>
     <x>200</x>
     <y>760</y>
     <width>71</width>
     <height>41</height>
    </rect>
   </property>
   <property name="text">
    <string>Result</string>
   </property>
  </widget>
  <widget class="QPushButton" name="imageCapture">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>700</y>
     <width>167</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border: none;
    outline: none; /* Ensures no outline is displayed */
}
QPushButton:pressed {
    border: none;
    outline: none; /* Ensures no outline is displayed */
}
</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="pbRinse">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>740</y>
     <width>167</width>
     <height>71</height>
    </rect>
   </property>
   <property name="focusPolicy">
    <enum>Qt::ClickFocus</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton{
background-color: rgb(120, 200, 90);
border-width: 2px;
border-color: rgb(120, 200, 90);
border-style: solid;
border-radius: 20;
color: rgb(0, 0, 0);
font: 100 18pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(190, 190, 190);;
border-width: 2px;
border-color: rgb(190, 190, 190);;
border-style: solid;
border-radius: 20;
color: rgb(0, 0, 0);
font: 100 18pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 20;
color: rgb(255, 255, 255);
font: 100 18pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 20;
color: rgb(0, 0, 0);
font: 100 18pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(241, 241, 241);
border-style: solid;
border-radius: 20;
color: rgb(0, 0, 0);
font: 100 18pt &quot;Roboto Medium&quot;;
}
</string>
   </property>
   <property name="text">
    <string>RINSE</string>
   </property>
  </widget>
 </widget>
 <customwidgets>
  <customwidget>
   <class>sQLEExtend</class>
   <extends>QLineEdit</extends>
   <header location="global">sqleextend.h</header>
  </customwidget>
  <customwidget>
   <class>sMeasuring2</class>
   <extends>QWidget</extends>
   <header location="global">smeasuring2.h</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <tabstops>
  <tabstop>lwOperator</tabstop>
  <tabstop>pbOperator</tabstop>
  <tabstop>lwSampleId</tabstop>
  <tabstop>pbSampleId</tabstop>
  <tabstop>pbRun</tabstop>
  <tabstop>pbStop</tabstop>
  <tabstop>twMeasuring</tabstop>
 </tabstops>
 <resources/>
 <connections/>
</ui>
