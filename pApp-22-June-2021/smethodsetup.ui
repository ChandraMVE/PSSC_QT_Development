<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>sMethodSetup</class>
 <widget class="QWidget" name="sMethodSetup">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>768</width>
    <height>946</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <widget class="QPushButton" name="pbSave">
   <property name="geometry">
    <rect>
     <x>365</x>
     <y>820</y>
     <width>167</width>
     <height>80</height>
    </rect>
   </property>
   <property name="focusPolicy">
    <enum>Qt::ClickFocus</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton{
background-color: rgb(51, 204, 0);
border-width: 2px;
border-color: rgb(51, 204, 0);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
   </property>
   <property name="text">
    <string>Save</string>
   </property>
  </widget>
  <widget class="QPushButton" name="pbExit">
   <property name="geometry">
    <rect>
     <x>560</x>
     <y>820</y>
     <width>167</width>
     <height>80</height>
    </rect>
   </property>
   <property name="focusPolicy">
    <enum>Qt::ClickFocus</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton{
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:disabled { 
background-color: rgb(204, 244, 198);
border-width: 2px;
border-color: rgb(127, 143, 127);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:pressed {
background-color: rgb(194, 194, 194);
border-width: 2px;
border-color: rgb(194, 194, 194);
border-style: solid;
border-radius: 10;
color: rgb(255, 255, 255);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:down {
background-color: rgb(24, 163, 3);
border-width: 2px;
border-color: rgb(24, 163, 3);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
QPushButton:default {
background-color: rgb(241, 241, 241);
border-width: 2px;
border-color: rgb(21, 100, 192);
border-style: solid;
border-radius: 10;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
}
</string>
   </property>
   <property name="text">
    <string>Exit</string>
   </property>
  </widget>
  <widget class="QTabWidget" name="tabMethod">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>10</y>
     <width>749</width>
     <height>780</height>
    </rect>
   </property>
   <property name="focusPolicy">
    <enum>Qt::NoFocus</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">QTabWidget::pane { /* The tab widget frame */
    position: absolute;

	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;

	 border: 0px solid #C4C4C3;
    border-bottom-color: #C2C7CB; /* same as the pane color */
    border-bottom-left-radius: 30px;
   border-bottom-right-radius: 30px;
    border-top-right-radius: 30px;



}

QTabWidget::tab-bar {
    alignment: left;

}

/* Style the tab using the tab sub-control. Note that
    it reads QTabBar _not_ QTabWidget */
QTabBar::tab {

    border: 1px solid #C4C4C3;
    border-bottom-color: #C2C7CB; /* same as the pane color */
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;

    padding: 2px;
    height:41px;
   width: 280px;

border-width: 1px;
border-color: rgb(21, 100, 192);
border-style: solid;

font: 75 16pt &quot;Roboto Medium&quot;;
	color: rgb(0, 0, 0);
	

}

QTabBar::tab:selected, QTabBar::tab:hover {
	background-color: rgb(190, 190, 190);
}

QTabBar::tab:selected {
    border-color: #9B9B9B;
    border-bottom-color: #C2C7CB; /* same as pane color */
 	border: 0px;
}
</string>
   </property>
   <property name="currentIndex">
    <number>0</number>
   </property>
   <widget class="QWidget" name="tab_3">
    <attribute name="title">
     <string>Method Setup</string>
    </attribute>
    <widget class="QFrame" name="frame_10">
     <property name="geometry">
      <rect>
       <x>0</x>
       <y>0</y>
       <width>749</width>
       <height>732</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">background-color: rgb(241, 241, 241);
border: 2px solid #C4C4C3;
border-bottom-color: #C2C7CB; /* same as the pane color */
border-bottom-left-radius: 30px;
border-bottom-right-radius: 30px;
border-top-right-radius: 30px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
border-color:  rgb(190, 190, 190);



</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::StyledPanel</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <widget class="QFrame" name="frame_11">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>20</y>
        <width>709</width>
        <height>81</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">border-width: 2px;
border-style: solid;
border-radius: 10px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto&quot;;
border-color:  rgb(200, 200, 200);

</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QComboBox" name="cbMethod">
       <property name="geometry">
        <rect>
         <x>230</x>
         <y>12</y>
         <width>271</width>
         <height>55</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto Medium</family>
         <pointsize>16</pointsize>
         <weight>9</weight>
         <italic>false</italic>
         <bold>false</bold>
        </font>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QComboBox {
   border: 2px solid  rgb(21, 100, 192);
   border-radius: 10px;
   padding: 1px 18px 1px 3px;
   background-color: rgb(255, 255, 255);
   color: rgb(0, 0, 0);
   font: 75 16pt &quot;Roboto Medium&quot;;
   padding-left: 15px;
}

QComboBox:on {
    padding-top: 3px;
    padding-left: 15px;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 45px;
    border-left-width: 2px;
    border-left-color: darkgray;
    border-left-style: solid;
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
    border-color: rgb(21, 100, 192);
}

QComboBox::down-arrow {
	image: url(:/images/icons/downarrow.png);
}

QComboBox::down-arrow:on {
    top: 1px;
    left: 1px;
}

QComboBox QAbstractItemView {
   border: 2px solid rgb(21, 100, 192);
   font: 75 16pt &quot;Roboto Medium&quot;;
   border-radius: 5px;
   background-color: rgb(255, 255, 255);
   selection-background-color:  rgb(21, 100, 192);
   selection-color: rgb(255, 255, 255);
}

/*  vertical */
QScrollBar:vertical {
     border: 0px solid  rgb(21, 100, 192);
     background:  rgb(230,230,230);
     width: 42px;
	 margin: 45px 0 45px 0;
     border-left: 2px solid  rgb(182, 182, 182);
 }

 QScrollBar::handle:vertical {
     background:  rgb(182, 182, 182);
     min-height: 20px;
 }

 QScrollBar::add-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 45px;
     subcontrol-position: bottom;
     subcontrol-origin: margin;
 }

 QScrollBar::sub-line:vertical {
     border: 0px solid grey;
     background:  rgb(230,230,230);
     height: 45px;
     subcontrol-position: top;
     subcontrol-origin: margin;
 }

 QScrollBar::up-arrow:vertical {
     width: 42px;
     height: 45px;
     background-image: url(:/images/icons/cuparrow.png);
}

QScrollBar::down-arrow:vertical {
     width: 42px;
      height: 45px;
      background-image: url(:/images/icons/cdownarrow.png);
 }

 QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
      background: none;
 }
</string>
       </property>
       <property name="frame">
        <bool>true</bool>
       </property>
       <item>
        <property name="text">
         <string>ASTM D5191</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>ASTM D6377</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>ASTM D6378</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>ASTM D5188</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Free 1</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Free 2</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Free 3</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Free 4</string>
        </property>
       </item>
      </widget>
      <widget class="QLabel" name="label_11">
       <property name="geometry">
        <rect>
         <x>20</x>
         <y>20</y>
         <width>141</width>
         <height>41</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">border-width: 0px;
font: 75 16pt &quot;Roboto Medium&quot;;</string>
       </property>
       <property name="text">
        <string>Method</string>
       </property>
      </widget>
     </widget>
     <widget class="QTabWidget" name="twMethodSetup">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>120</y>
        <width>709</width>
        <height>449</height>
       </rect>
      </property>
      <property name="focusPolicy">
       <enum>Qt::NoFocus</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QTabWidget::pane { /* The tab widget frame */
	position: absolute;

	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;

	border: 0px solid #C4C4C3;
   	border-bottom-color: #C2C7CB; /* same as the pane color */
	border-bottom-left-radius: 30px;
	border-bottom-right-radius: 30px;
	border-top-right-radius: 30px;
}

QTabWidget::tab-bar {
    alignment: left;
}


/* Style the tab using the tab sub-control. Note that
    it reads QTabBar _not_ QTabWidget */
QTabBar::tab {

    border: 1px solid #C4C4C3;
    border-bottom-color: #C2C7CB; /* same as the pane color */
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;

    padding: 2px;
    height:41px;
   	width: 170px;

	border-width: 1px;
	border-color: rgb(21, 100, 192);
	border-style: solid;

	font: 75 16pt &quot;Roboto Medium&quot;;
	color: rgb(0, 0, 0);

}

QTabBar::tab:hover {
	background-color: rgb(190, 190, 190);
}

QTabBar::tab:selected {
	/*background-color: rgb(51, 204, 255);*/
	background-color: rgb(210, 210, 210);
}



QTabBar::tab:selected {
    border-color: #9B9B9B;
    border-bottom-color: #C2C7CB; /* same as pane color */
 	border: 0px;
}

QTabBar::tab:!selected {
    margin: 0px; /* make non-selected tabs look smaller */
}

QTabBar {
 	border: 0px;
	border-radius: 0px;
}

QFrame {
    border: 0px;
}
</string>
      </property>
      <property name="currentIndex">
       <number>3</number>
      </property>
      <widget class="QWidget" name="tabFormula">
       <attribute name="title">
        <string>Formula</string>
       </attribute>
       <widget class="QFrame" name="frFormula">
        <property name="geometry">
         <rect>
          <x>0</x>
          <y>0</y>
          <width>709</width>
          <height>402</height>
         </rect>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(241, 241, 241);
border: 2px solid #C4C4C3;
border-bottom-color: #C2C7CB; /* same as the pane color */
border-bottom-left-radius: 30px;
border-bottom-right-radius: 30px;
border-top-right-radius: 30px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
border-color:  rgb(190, 190, 190);
</string>
        </property>
        <property name="frameShape">
         <enum>QFrame::StyledPanel</enum>
        </property>
        <property name="frameShadow">
         <enum>QFrame::Raised</enum>
        </property>
        <widget class="QComboBox" name="cbFormula">
         <property name="geometry">
          <rect>
           <x>20</x>
           <y>50</y>
           <width>660</width>
           <height>55</height>
          </rect>
         </property>
         <property name="font">
          <font>
           <family>Roboto Medium</family>
           <pointsize>15</pointsize>
           <weight>9</weight>
           <italic>false</italic>
           <bold>false</bold>
          </font>
         </property>
         <property name="focusPolicy">
          <enum>Qt::ClickFocus</enum>
         </property>
         <property name="styleSheet">
          <string notr="true">QComboBox {
   	border: 2px solid white;
    border-radius: 10px;
    padding: 1px 18px 1px 3px;
	background-color: rgb(255, 255, 255);
	border-color: rgb(21, 100, 192);
	color: rgb(0, 0, 0);
	font: 75 15pt &quot;Roboto Medium&quot;;
    padding-left: 10px;

}
QComboBox:editable {
        background: white;
}

QComboBox:on { /* shift the text when the popup opens */
    padding-top: 3px;
    padding-left: 12px;
}
QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 45px;
    border-left-width: 2px;
    border-left-color: darkgray;
    border-left-style: solid; /* just a single line */
    border-top-right-radius: 3px; /* same radius as the QComboBox */
    border-bottom-right-radius: 3px;
    border-color: rgb(21, 100, 192);
 
}
QComboBox::down-arrow {
  /*  image: url(c:/icons/downarrow.png); */
	image: url(:/images/icons/downarrow.png);
}
QComboBox::down-arrow:on { /* shift the arrow when popup is open */ 
    top: 1px;
    left: 1px;
}
QComboBox QAbstractItemView {
border: 2px solid darkgray;
font: 75 16pt &quot;Roboto Medium&quot;;
border-radius: 5px;
background-color: rgb(255, 255, 255);
	
	selection-background-color:  rgb(21, 100, 192);

}</string>
         </property>
         <property name="frame">
          <bool>true</bool>
         </property>
         <item>
          <property name="text">
           <string>ASTM =  0.965 x Ptot – 0.00 Pabs – 3.78</string>
          </property>
         </item>
         <item>
          <property name="text">
           <string>EPA = 0.965 x Ptot – 0.00 Pab – 2.39</string>
          </property>
         </item>
         <item>
          <property name="text">
           <string>CARB = 0.972 x Ptot – 0.00 Pabs – 4.93</string>
          </property>
         </item>
        </widget>
        <widget class="QGroupBox" name="gbConstants">
         <property name="geometry">
          <rect>
           <x>20</x>
           <y>120</y>
           <width>660</width>
           <height>141</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
         </property>
         <property name="title">
          <string>Constants</string>
         </property>
         <widget class="QLabel" name="label_64">
          <property name="geometry">
           <rect>
            <x>20</x>
            <y>50</y>
            <width>21</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;</string>
          </property>
          <property name="text">
           <string>a</string>
          </property>
         </widget>
         <widget class="QLabel" name="label_65">
          <property name="geometry">
           <rect>
            <x>250</x>
            <y>50</y>
            <width>31</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;</string>
          </property>
          <property name="text">
           <string>b</string>
          </property>
         </widget>
         <widget class="QLabel" name="label_66">
          <property name="geometry">
           <rect>
            <x>480</x>
            <y>50</y>
            <width>31</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;</string>
          </property>
          <property name="text">
           <string>c</string>
          </property>
         </widget>
         <widget class="sQLEExtend" name="leConst1">
          <property name="geometry">
           <rect>
            <x>60</x>
            <y>50</y>
            <width>130</width>
            <height>55</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
         <widget class="sQLEExtend" name="leConst2">
          <property name="geometry">
           <rect>
            <x>290</x>
            <y>50</y>
            <width>130</width>
            <height>55</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
         <widget class="sQLEExtend" name="leConst3">
          <property name="geometry">
           <rect>
            <x>510</x>
            <y>50</y>
            <width>130</width>
            <height>55</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
        </widget>
       </widget>
      </widget>
      <widget class="QWidget" name="tabParameters">
       <attribute name="title">
        <string>Parameters</string>
       </attribute>
       <widget class="QFrame" name="frParameters">
        <property name="geometry">
         <rect>
          <x>0</x>
          <y>0</y>
          <width>709</width>
          <height>402</height>
         </rect>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(241, 241, 241);
border: 2px solid #C4C4C3;
border-bottom-color: #C2C7CB; /* same as the pane color */
border-bottom-left-radius: 30px;
border-bottom-right-radius: 30px;
border-top-right-radius: 30px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
border-color:  rgb(190, 190, 190);</string>
        </property>
        <property name="frameShape">
         <enum>QFrame::StyledPanel</enum>
        </property>
        <property name="frameShadow">
         <enum>QFrame::Raised</enum>
        </property>
        <widget class="QFrame" name="frPara1">
         <property name="geometry">
          <rect>
           <x>20</x>
           <y>20</y>
           <width>660</width>
           <height>350</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">border-width: 2px;
border-style: solid;
border-radius: 10px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto&quot;;
border-color:  rgb(200, 200, 200);

</string>
         </property>
         <property name="frameShape">
          <enum>QFrame::StyledPanel</enum>
         </property>
         <property name="frameShadow">
          <enum>QFrame::Raised</enum>
         </property>
         <widget class="QLabel" name="lblPara1">
          <property name="geometry">
           <rect>
            <x>20</x>
            <y>30</y>
            <width>171</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;
font: 75 16pt &quot;Roboto Medium&quot;;</string>
          </property>
          <property name="text">
           <string>Temperature</string>
          </property>
         </widget>
         <widget class="QLabel" name="lblPara3">
          <property name="geometry">
           <rect>
            <x>20</x>
            <y>150</y>
            <width>171</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;
font: 75 16pt &quot;Roboto Medium&quot;;</string>
          </property>
          <property name="text">
           <string>V/L Ratio</string>
          </property>
         </widget>
         <widget class="QLabel" name="lblPara2">
          <property name="geometry">
           <rect>
            <x>20</x>
            <y>90</y>
            <width>171</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;
font: 75 16pt &quot;Roboto Medium&quot;;</string>
          </property>
          <property name="text">
           <string>Time</string>
          </property>
         </widget>
         <widget class="sQLEExtend" name="lePara1">
          <property name="geometry">
           <rect>
            <x>230</x>
            <y>30</y>
            <width>211</width>
            <height>41</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
         <widget class="sQLEExtend" name="lePara2">
          <property name="geometry">
           <rect>
            <x>230</x>
            <y>90</y>
            <width>211</width>
            <height>41</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
         <widget class="sQLEExtend" name="lePara3">
          <property name="geometry">
           <rect>
            <x>230</x>
            <y>150</y>
            <width>211</width>
            <height>41</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
         <widget class="sQLEExtend" name="lePara4">
          <property name="geometry">
           <rect>
            <x>230</x>
            <y>210</y>
            <width>211</width>
            <height>41</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
         <widget class="QLabel" name="lblPara4">
          <property name="geometry">
           <rect>
            <x>20</x>
            <y>210</y>
            <width>171</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;
font: 75 16pt &quot;Roboto Medium&quot;;</string>
          </property>
          <property name="text">
           <string>Shaker Speed</string>
          </property>
         </widget>
        </widget>
       </widget>
      </widget>
      <widget class="QWidget" name="tabFreeParas">
       <attribute name="title">
        <string>Parameters</string>
       </attribute>
       <widget class="QFrame" name="frFreeParas">
        <property name="geometry">
         <rect>
          <x>0</x>
          <y>0</y>
          <width>709</width>
          <height>402</height>
         </rect>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(241, 241, 241);
border: 2px solid #C4C4C3;
border-bottom-color: #C2C7CB; /* same as the pane color */
border-bottom-left-radius: 30px;
border-bottom-right-radius: 30px;
border-top-right-radius: 30px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
border-color:  rgb(190, 190, 190);</string>
        </property>
        <property name="frameShape">
         <enum>QFrame::StyledPanel</enum>
        </property>
        <property name="frameShadow">
         <enum>QFrame::Raised</enum>
        </property>
        <widget class="QFrame" name="frTestTemp">
         <property name="geometry">
          <rect>
           <x>20</x>
           <y>20</y>
           <width>660</width>
           <height>101</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">border-width: 2px;
border-style: solid;
border-radius: 10px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto&quot;;
border-color:  rgb(200, 200, 200);

</string>
         </property>
         <property name="frameShape">
          <enum>QFrame::StyledPanel</enum>
         </property>
         <property name="frameShadow">
          <enum>QFrame::Raised</enum>
         </property>
         <widget class="QLabel" name="lblTestTemp">
          <property name="geometry">
           <rect>
            <x>20</x>
            <y>30</y>
            <width>281</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;
font: 75 16pt &quot;Roboto Medium&quot;;</string>
          </property>
          <property name="text">
           <string>Test Temperature</string>
          </property>
         </widget>
         <widget class="sQLEExtend" name="leTestTemp">
          <property name="geometry">
           <rect>
            <x>360</x>
            <y>30</y>
            <width>121</width>
            <height>41</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string>15</string>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
        </widget>
        <widget class="QGroupBox" name="gbEquiTiming_2">
         <property name="geometry">
          <rect>
           <x>20</x>
           <y>130</y>
           <width>660</width>
           <height>131</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
         </property>
         <property name="title">
          <string>Equilbrium Timing</string>
         </property>
         <widget class="QLabel" name="label_53">
          <property name="geometry">
           <rect>
            <x>20</x>
            <y>50</y>
            <width>61</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;</string>
          </property>
          <property name="text">
           <string>TPx1</string>
          </property>
         </widget>
         <widget class="QLabel" name="label_54">
          <property name="geometry">
           <rect>
            <x>180</x>
            <y>50</y>
            <width>61</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;</string>
          </property>
          <property name="text">
           <string>TPx2</string>
          </property>
         </widget>
         <widget class="QLabel" name="label_55">
          <property name="geometry">
           <rect>
            <x>340</x>
            <y>50</y>
            <width>51</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;</string>
          </property>
          <property name="text">
           <string>TPx3</string>
          </property>
         </widget>
         <widget class="sQLEExtend" name="leTPx1">
          <property name="geometry">
           <rect>
            <x>81</x>
            <y>50</y>
            <width>81</width>
            <height>41</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string>180</string>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
         <widget class="sQLEExtend" name="leTPx2">
          <property name="geometry">
           <rect>
            <x>241</x>
            <y>50</y>
            <width>81</width>
            <height>41</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string>180</string>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
         <widget class="sQLEExtend" name="leTPx3">
          <property name="geometry">
           <rect>
            <x>400</x>
            <y>50</y>
            <width>81</width>
            <height>41</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string>180</string>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
        </widget>
        <widget class="QFrame" name="frTestTemp_2">
         <property name="geometry">
          <rect>
           <x>20</x>
           <y>280</y>
           <width>660</width>
           <height>101</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">border-width: 2px;
border-style: solid;
border-radius: 10px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto&quot;;
border-color:  rgb(200, 200, 200);

</string>
         </property>
         <property name="frameShape">
          <enum>QFrame::StyledPanel</enum>
         </property>
         <property name="frameShadow">
          <enum>QFrame::Raised</enum>
         </property>
         <widget class="QLabel" name="lblTestTemp_2">
          <property name="geometry">
           <rect>
            <x>20</x>
            <y>30</y>
            <width>171</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;
font: 75 16pt &quot;Roboto Medium&quot;;</string>
          </property>
          <property name="text">
           <string>V/L Ratio</string>
          </property>
         </widget>
         <widget class="sQLEExtend" name="leVLRatio">
          <property name="geometry">
           <rect>
            <x>200</x>
            <y>30</y>
            <width>121</width>
            <height>41</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string>15</string>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
        </widget>
       </widget>
      </widget>
      <widget class="QWidget" name="tabPassFail">
       <attribute name="title">
        <string>Pass/Fail</string>
       </attribute>
       <widget class="QFrame" name="frPassFail">
        <property name="geometry">
         <rect>
          <x>0</x>
          <y>0</y>
          <width>709</width>
          <height>402</height>
         </rect>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(241, 241, 241);
	 border: 2px solid #C4C4C3;
    border-bottom-color: #C2C7CB; /* same as the pane color */
    border-bottom-left-radius: 30px;
border-bottom-right-radius: 30px;
    border-top-right-radius: 30px;
color: rgb(0, 0, 0);
font: 75 16pt &quot;Roboto Medium&quot;;
border-color:  rgb(190, 190, 190);



</string>
        </property>
        <property name="frameShape">
         <enum>QFrame::StyledPanel</enum>
        </property>
        <property name="frameShadow">
         <enum>QFrame::Raised</enum>
        </property>
        <widget class="QGroupBox" name="gbRange">
         <property name="geometry">
          <rect>
           <x>20</x>
           <y>181</y>
           <width>660</width>
           <height>150</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
         </property>
         <property name="title">
          <string>&quot;Pass&quot; Range P</string>
         </property>
         <widget class="QLabel" name="label_51">
          <property name="geometry">
           <rect>
            <x>30</x>
            <y>50</y>
            <width>71</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;</string>
          </property>
          <property name="text">
           <string>from</string>
          </property>
         </widget>
         <widget class="QLabel" name="label_52">
          <property name="geometry">
           <rect>
            <x>260</x>
            <y>50</y>
            <width>71</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;</string>
          </property>
          <property name="text">
           <string>to</string>
          </property>
          <property name="alignment">
           <set>Qt::AlignCenter</set>
          </property>
         </widget>
         <widget class="sQLEExtend" name="lePRPFrom">
          <property name="geometry">
           <rect>
            <x>110</x>
            <y>50</y>
            <width>141</width>
            <height>55</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
         <widget class="sQLEExtend" name="lePRPTo">
          <property name="geometry">
           <rect>
            <x>340</x>
            <y>50</y>
            <width>141</width>
            <height>55</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QLineEdit { 
	padding: 1px 18px 1px 10px;
	background-color: rgb(255,255,255);
	border-width: 2px;
	border-color: rgb(21, 100, 192);
	border-style: solid;
	border-radius: 15;
	color: rgb(0, 0, 0);
	font: 75 16pt &quot;Roboto Medium&quot;;
}

QLineEdit:read-only {
	background-color: rgb(245,245,245);
}
QLineEdit[error=true] {
border-color: red;
}
QLineEdit[error=false] {
border-color: rgb(21, 100, 192);
}

</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="maxLength">
           <number>15</number>
          </property>
         </widget>
        </widget>
        <widget class="QGroupBox" name="groupBox_9">
         <property name="geometry">
          <rect>
           <x>20</x>
           <y>10</y>
           <width>660</width>
           <height>150</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">QGroupBox {
    border: 2px solid  rgb(200, 200, 200);
    border-radius: 10px;
    margin-top: 16px; /* leave space at the top for the title */
    padding : 0px;

}

QGroupBox::title {
    subcontrol-origin: padding;
    subcontrol-position: top left ; /* position at the top center */
    left : 20px;
    top : -15px;
}</string>
         </property>
         <property name="title">
          <string/>
         </property>
         <widget class="QCheckBox" name="cbAlarmEnable">
          <property name="geometry">
           <rect>
            <x>440</x>
            <y>50</y>
            <width>41</width>
            <height>55</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QCheckBox {
    spacing: 5px;
 border: 0px solid #999999;

}

QCheckBox::indicator {
    width: 41px;
    height: 41px;
}

QCheckBox::indicator:unchecked {
	image: url(:/images/icons/ancheck.png);
}

QCheckBox::indicator:unchecked:disabled{
	image: url(:/images/icons/andcheck.png);
}
QCheckBox::indicator:checked:disabled{
	image: url(:/images/icons/adcheck.png);
}

/*
QCheckBox::indicator:unchecked:hover {
    image: url(:/images/checkbox_unchecked_hover.png);
}

QCheckBox::indicator:unchecked:pressed {
    image: url(:/images/checkbox_unchecked_pressed.png);
}
*/
QCheckBox::indicator:checked {
    image: url(:/images/icons/acheck.png);
}
/*
QCheckBox::indicator:checked:hover {
    image: url(:/images/checkbox_checked_hover.png);
}

QCheckBox::indicator:checked:pressed {
    image: url(:/images/checkbox_checked_pressed.png);
}

QCheckBox::indicator:indeterminate:hover {
    image: url(:/images/checkbox_indeterminate_hover.png);
}
/*
QCheckBox::indicator:indeterminate:pressed {
    image: url(:/images/checkbox_indeterminate_pressed.png);
}
*/</string>
          </property>
          <property name="text">
           <string/>
          </property>
         </widget>
         <widget class="QLabel" name="label_50">
          <property name="geometry">
           <rect>
            <x>250</x>
            <y>50</y>
            <width>181</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;</string>
          </property>
          <property name="text">
           <string>Alarm Enable</string>
          </property>
         </widget>
         <widget class="QCheckBox" name="cbEnable">
          <property name="geometry">
           <rect>
            <x>130</x>
            <y>50</y>
            <width>41</width>
            <height>55</height>
           </rect>
          </property>
          <property name="focusPolicy">
           <enum>Qt::ClickFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QCheckBox {
    spacing: 5px;
 border: 0px solid #999999;

}

QCheckBox::indicator {
    width: 41px;
    height: 41px;
}

QCheckBox::indicator:unchecked {
	image: url(:/images/icons/ancheck.png);
}

QCheckBox::indicator:unchecked:disabled{
	image: url(:/images/icons/andcheck.png);
}
QCheckBox::indicator:checked:disabled{
	image: url(:/images/icons/adcheck.png);
}

/*
QCheckBox::indicator:unchecked:hover {
    image: url(:/images/checkbox_unchecked_hover.png);
}

QCheckBox::indicator:unchecked:pressed {
    image: url(:/images/checkbox_unchecked_pressed.png);
}
*/

QCheckBox::indicator:checked {
    image: url(:/images/icons/acheck.png);
}
/*
QCheckBox::indicator:checked:hover {
    image: url(:/images/checkbox_checked_hover.png);
}

QCheckBox::indicator:checked:pressed {
    image: url(:/images/checkbox_checked_pressed.png);
}
*/
QCheckBox::indicator:indeterminate:hover {
    image: url(:/images/checkbox_indeterminate_hover.png);
}
/*
QCheckBox::indicator:indeterminate:pressed {
    image: url(:/images/checkbox_indeterminate_pressed.png);
}
*/</string>
          </property>
          <property name="text">
           <string/>
          </property>
         </widget>
         <widget class="QLabel" name="label_49">
          <property name="geometry">
           <rect>
            <x>20</x>
            <y>50</y>
            <width>91</width>
            <height>41</height>
           </rect>
          </property>
          <property name="styleSheet">
           <string notr="true">border-width: 0px;</string>
          </property>
          <property name="text">
           <string>Enable</string>
          </property>
         </widget>
        </widget>
       </widget>
      </widget>
     </widget>
    </widget>
   </widget>
  </widget>
 </widget>
 <customwidgets>
  <customwidget>
   <class>sQLEExtend</class>
   <extends>QLineEdit</extends>
   <header location="global">sqleextend.h</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
